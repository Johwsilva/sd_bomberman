#!/bin/bash

DIR=$(pwd)
[ $(basename $DIR) == 'bin' ] && echo "Don't run in bin" && exit -1  

# Variables
DOCKER_USER="bomberman"
APP_DIR="/usr/src/app"

# Parameters to docker run
PARAMS="--rm -itP --user=${DOCKER_USER}:${DOCKER_USER} -v /etc/localtime:/etc/localtime:ro -v ${DIR}:${APP_DIR}"
PARAMS_DISPLAY="-e=\"DISPLAY=unix$DISPLAY\" -e=\"XDG_RUNTIME_DIR=/run/user/1000\" -v /tmp/.X11-unix:/tmp/.X11-unix:rw -v /run/user/1000:/run/user/1000 --privileged"
PARAMS_LOCK="-v /dev/dri:/dev/dri:rw -v /dev/shm:/dev/shm -v /var/lib/dbus:/var/lib/dbus"
PARAMS_SOUND="--device /dev/snd:/dev/snd"

IMAGE="sd_bomberman"
[ "$(docker images | grep "$IMAGE")" == "" ] && docker build -t $IMAGE .

if [ "$1" == "" ] ; then
  # --name https://docs.docker.com/engine/reference/run/#name-name
  # -p https://docs.docker.com/engine/reference/run/#expose-incoming-ports
  docker run $PARAMS \
    $PARAMS_DISPLAY \
    --name $IMAGE \
    -p 3000:3000 -p 2223:22 \
    $IMAGE
elif [ "$1" == "force-build" ] ; then
  docker build -t $IMAGE .
elif [ "$1" == "clean" ] ; then
  docker rm $(docker ps -aq)
  docker rmi $IMAGE
elif [ "$1" == "ssh" ] ; then
  SSH_PARAMS=""
  ssh $SSH_PARAMS bomberman $2
  [ "$?" == "255" ] && ssh-keygen -f ~/.ssh/known_hosts -R [127.0.0.1]:2223 && ssh $SSH_PARAMS bomberman $2
else
  # --rm https://docs.docker.com/engine/reference/run/#clean-up-rm
  # -it https://docs.docker.com/engine/reference/run/#foreground
  # -P https://docs.docker.com/engine/reference/run/#expose-incoming-ports
  # --user=1000:1000 https://docs.docker.com/engine/reference/run/#user
  # --volume=$DIR:/app https://docs.docker.com/engine/reference/run/#volume-shared-filesystems
  docker run $PARAMS \
    $PARAMS_DISPLAY \
    $PARAMS_SOUND \
    $PARAMS_LOCK \
    $IMAGE $1
fi

